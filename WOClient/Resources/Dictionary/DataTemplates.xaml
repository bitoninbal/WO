<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:archive="clr-namespace:WOClient.Components.Archive"
                    xmlns:comments="clr-namespace:WOClient.Components.Comments"
                    xmlns:converters="clr-namespace:WOClient.Converters"
                    xmlns:emplyees="clr-namespace:WOClient.Components.Employees"
                    xmlns:enums="clr-namespace:WOCommon.Enums;assembly=WOCommon"
                    xmlns:login="clr-namespace:WOClient.Components.Login"
                    xmlns:forgetPassword="clr-namespace:WOClient.Components.ForgetPassword"
                    xmlns:libraryModels="clr-namespace:WOClient.Library.Models;assembly=WOClient.Library"
                    xmlns:myTask="clr-namespace:WOClient.Components.MyTaskComponent"
                    xmlns:myTasks="clr-namespace:WOClient.Components.MyTasks"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:models="clr-namespace:WOClient.Library.Models;assembly=WOClient.Library"
                    xmlns:trackingTasks="clr-namespace:WOClient.Components.TrackingTasks"
                    xmlns:reports="clr-namespace:WOClient.Components.Reports"
                    xmlns:validations="clr-namespace:WOClient.Validations">
    <converters:EmployeeIdToFullNameConverter x:Key="EmployeeIdToFullNameConverter" />
    <converters:LoggedInToBooleanConverter x:Key="LoggedInToBooleanConverter" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <DataTemplate DataType="{x:Type archive:ArchiveViewModel}">
        <archive:ArchiveView />
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type comments:CommentsViewModel}">
        <comments:CommentsView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type emplyees:EmployeesViewModel}">
        <emplyees:EmployeesView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type login:LoginViewModel}">
        <login:LoginView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type reports:ReportsViewModel}">
        <reports:ReportsView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type forgetPassword:ForgetPasswordViewModel}">
        <forgetPassword:ForgetPasswordView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type myTasks:MyTasksViewModel}">
        <myTasks:MyTasksView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type trackingTasks:TrackingTasksViewModel}">
        <trackingTasks:TrackingTasksView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type models:Comment}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0"
                        Orientation="Horizontal">
                <TextBlock FontWeight="Bold"
                           Text="{Binding SenderFirstName}" />
                <TextBlock Margin="5 0"
                           FontWeight="Bold"
                           Text="{Binding Path=SenderLastName,
                                          StringFormat={}{0}:}" />
                <StackPanel.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueLightBrush}" />
                        
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=SenderId,
                                                           Converter={StaticResource LoggedInToBooleanConverter}}"
                                         Value="True">
                                <Setter Property="Foreground" Value="#c51162" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
            </StackPanel>

            <TextBlock Grid.Row="1"
                       Foreground="Black"
                       TextWrapping="Wrap"
                       Text="{Binding Message}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ReadOnlyTaskForCommentsTemplate"
                  DataType="{x:Type models:MyTask}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0"
                       Grid.Column="0"
                       Margin="0 0 20 0"
                       Text="Employee:" />
            <TextBlock Grid.Row="0"
                       Grid.Column="1"
                       HorizontalAlignment="Stretch"
                       Text="{Binding Path=AssignedEmployee,
                                      Converter={StaticResource EmployeeIdToFullNameConverter}}" />

            <TextBlock Grid.Row="1"
                       Grid.Column="0"
                       Margin="0 0 20 0"
                       Text="Final Date:" />
            <TextBlock Grid.Row="1"
                       Grid.Column="1"
                       Text="{Binding Path=FinalDate,
                                      StringFormat={}{0:dd/MM/yyyy}}" />

            <TextBlock Grid.Row="2"
                       Grid.Column="0"
                       Margin="0 0 20 0"
                       Text="Priority:" />
            <TextBlock Grid.Row="2"
                       Grid.Column="1"
                       Text="{Binding Priority}" />

            <TextBlock Grid.Row="3"
                       Grid.Column="0"
                       Margin="0 0 20 0"
                       Text="Description:" />
            <TextBlock Grid.Row="3"
                       Grid.Column="1"
                       TextWrapping="Wrap"
                       Text="{Binding Description}" />

            <StackPanel Grid.Row="4"
                        Grid.Column="1"
                        Margin="0 5 0 0"
                        HorizontalAlignment="Stretch"
                        FlowDirection="RightToLeft"
                        Orientation="Horizontal">
                <Button HorizontalAlignment="Right"
                        IsEnabled="False"
                        ToolTip="Delete the task"
                        Content="{materialDesign:PackIcon Kind=TrashCan}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}"
                               BasedOn="{StaticResource MaterialDesignRaisedButton}">
                            <Setter Property="Visibility" Value="Collapsed" />

                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static libraryModels:LoggedInUser.Instance},
                                                                     Path=Permission}"
                                                   Value="{x:Static enums:PermissionsEnum.Manager}" />

                                        <Condition Binding="{Binding Path=IsArchive}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>

                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Margin="5 0 0 0"
                        HorizontalAlignment="Right"
                        IsEnabled="False"
                        ToolTip="Move to Archive"
                        Content="{materialDesign:PackIcon Kind=ArchiveArrowUp}" />

                <Button Margin="5 0 0 0"
                        ToolTip="Edit task"
                        Content="{materialDesign:PackIcon Kind=PencilBoxMultiple}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}"
                                   BasedOn="{StaticResource MaterialDesignRaisedButton}">
                            <Setter Property="Visibility" Value="Collapsed" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static libraryModels:LoggedInUser.Instance},
                                                               Path=Permission}"
                                             Value="{x:Static enums:PermissionsEnum.Manager}">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Margin="5 0 0 0"
                        HorizontalAlignment="Right"
                        IsEnabled="False"
                        ToolTip="Write comment"
                        Content="{materialDesign:PackIcon Kind=CommentOutline}" />

                <ToggleButton Margin="5 0 0 0"
                              IsEnabled="False"
                              ToolTip="Lock/Unlock"
                              HorizontalAlignment="Right"
                              Content="{materialDesign:PackIcon Kind=LockOpenVariantOutline}"
                              IsChecked="{Binding IsCompleted}">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}"
                               BasedOn="{StaticResource MaterialDesignSwitchToggleButton}">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=LockOutline}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CommentsItemTemplate"
                  DataType="{x:Type models:MyTask}">
        <DataTemplate.Resources>
            <myTask:MyTaskViewModel x:Key="Vm" />
        </DataTemplate.Resources>

        <Expander Width="490"
                  Padding="5"
                  Foreground="Black"
                  Background="#b39ddb">
            <Expander.Header>
                <TextBlock FontSize="16"
                           HorizontalAlignment="Center"
                           Text="{Binding Subject}" />
            </Expander.Header>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <ListBox Grid.Row="0"
                         Grid.Column="0"
                         ItemsSource="{Binding Comments}" />
                <TextBox x:Name="CommentTextBox"
                         Grid.Row="1"
                         Grid.Column="0"
                         Margin="0 0 0 20"
                         MinLines="4"
                         MaxLines="4"
                         AcceptsReturn="True"
                         Background="White">
                    <TextBox.Text>
                        <Binding Path="CommentMessage"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validations:EmptyStringValidation ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <DockPanel Grid.Row="2"
                           Grid.Column="0">
                    <Button DockPanel.Dock="Left"
                            Width="100"
                            ToolTip="Send"
                            Content="{materialDesign:PackIcon Kind=Send}"
                            Command="{Binding Source={StaticResource Vm},
                                              Path=SendCommentCommand}"
                            CommandParameter="{Binding Path=DataContext,
                                                       RelativeSource={RelativeSource AncestorType=Grid}}">
                        <Button.Style>
                            <Style TargetType="Button" 
                                   BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
                                <Setter Property="IsEnabled" Value="False" />
                                
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=CommentTextBox,
                                                                         Path=(Validation.HasError)}"
                                                       Value="False" />

                                            <Condition Binding="{Binding IsCompleted}"
                                                       Value="False" />
                                        </MultiDataTrigger.Conditions>

                                        <Setter Property="IsEnabled" Value="True" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <ToggleButton x:Name="ShowTaskToggleButton"
                                  DockPanel.Dock="Right"
                                  HorizontalAlignment="Right"
                                  ToolTip="Show Task"
                                  Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}"
                                  Content="{materialDesign:PackIcon Kind=TextBox,
                                                                    Size=25}" />
                </DockPanel>

                <ContentControl Grid.Row="3"
                                Content="{Binding Path=DataContext,
                                                  RelativeSource={RelativeSource AncestorType=Grid}}"
                                ContentTemplate="{StaticResource ReadOnlyTaskForCommentsTemplate}">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">
                            <Setter Property="Visibility" Value="Collapsed" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsChecked,
                                                                ElementName=ShowTaskToggleButton}"
                                                Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </Grid>
        </Expander>
    </DataTemplate>
</ResourceDictionary>